{"version":3,"file":"auth.controller.js","sourceRoot":"","sources":["../../src/auth/auth.controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,2CAQwB;AACxB,+CAA6C;AAC7C,6CAKyB;AACzB,iDAA6C;AAC7C,6CAA2C;AAC3C,2DAAsD;AACtD,+DAA0D;AAC1D,gEAA4D;AAC5D,gFAAgE;AAChE,8DAAkD;AAClD,4DAAuD;AAIhD,IAAM,cAAc,GAApB,MAAM,cAAc;IACzB,YACmB,WAAwB,EACxB,iBAAoC;QADpC,gBAAW,GAAX,WAAW,CAAa;QACxB,sBAAiB,GAAjB,iBAAiB,CAAmB;IACpD,CAAC;IAME,AAAN,KAAK,CAAC,WAAW,CAAS,aAA4B;QACpD,OAAO,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAC/C,aAAa,CAAC,QAAQ,EACtB,aAAa,CAAC,KAAK,CACpB,CAAC;IACJ,CAAC;IAIK,AAAN,KAAK,CAAC,kBAAkB,CAAQ,GAAG;QACjC,OAAO,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACrD,CAAC;IAOK,AAAN,KAAK,CAAC,aAAa,CAAY,IAAU;QACvC,OAAO,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;IAOK,AAAN,KAAK,CAAC,MAAM,CAAY,IAAU;QAChC,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtD,OAAO,EAAE,OAAO,EAAE,yBAAyB,EAAE,CAAC;IAChD,CAAC;CACF,CAAA;AAzCY,wCAAc;AAUnB;IAJL,IAAA,aAAI,EAAC,cAAc,CAAC;IACpB,IAAA,sBAAY,EAAC;QACZ,OAAO,EAAE,6DAA6D;KACvE,CAAC;IACiB,WAAA,IAAA,aAAI,GAAE,CAAA;;qCAAgB,+BAAa;;iDAKrD;AAIK;IAFL,IAAA,YAAG,EAAC,iBAAiB,CAAC;IACtB,IAAA,kBAAS,EAAC,IAAA,oBAAS,EAAC,QAAQ,CAAC,CAAC;IACL,WAAA,IAAA,YAAG,GAAE,CAAA;;;;wDAE9B;AAOK;IALL,IAAA,aAAI,EAAC,SAAS,CAAC;IACf,IAAA,kBAAS,EAAC,kCAAe,CAAC;IAC1B,IAAA,uBAAa,GAAE;IACf,IAAA,sBAAY,EAAC,EAAE,OAAO,EAAE,0CAA0C,EAAE,CAAC;IACrE,IAAA,qBAAW,EAAC,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,oBAAS,EAAE,CAAC;IACzB,WAAA,IAAA,4BAAO,GAAE,CAAA;;qCAAO,kBAAI;;mDAExC;AAOK;IALL,IAAA,aAAI,EAAC,QAAQ,CAAC;IACd,IAAA,kBAAS,EAAC,6BAAY,CAAC;IACvB,IAAA,uBAAa,GAAE;IACf,IAAA,sBAAY,EAAC,EAAE,OAAO,EAAE,4CAA4C,EAAE,CAAC;IACvE,IAAA,qBAAW,EAAC,EAAE,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,8BAA8B,EAAE,CAAC;IAC5D,WAAA,IAAA,4BAAO,GAAE,CAAA;;qCAAO,kBAAI;;4CAGjC;yBAxCU,cAAc;IAF1B,IAAA,iBAAO,EAAC,MAAM,CAAC;IACf,IAAA,mBAAU,EAAC,MAAM,CAAC;qCAGe,0BAAW;QACL,uCAAiB;GAH5C,cAAc,CAyC1B","sourcesContent":["import {\n  Controller,\n  Post,\n  Body,\n  UseGuards,\n  Get,\n  Req,\n  HttpCode,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiResponse,\n  ApiBearerAuth,\n} from '@nestjs/swagger';\nimport { AuthService } from './auth.service';\nimport { TokensDto } from './dto/auth.dto';\nimport { SocialAuthDto } from './dto/social-auth.dto';\nimport { SocialAuthService } from './social-auth.service';\nimport { JwtRefreshGuard } from './guards/jwt-refresh.auth';\nimport { GetUser } from '@common/decorators/get-user.decorator';\nimport { User } from '@users/schemas/user.schema';\nimport { JwtAuthGuard } from './guards/jwt-auth.guard';\n\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly socialAuthService: SocialAuthService,\n  ) {}\n\n  @Post('social/login')\n  @ApiOperation({\n    summary: 'Login with social provider token, except IOS facebook login',\n  })\n  async socialLogin(@Body() socialAuthDto: SocialAuthDto) {\n    return this.socialAuthService.validateSocialLogin(\n      socialAuthDto.provider,\n      socialAuthDto.token,\n    );\n  }\n\n  @Get('google/callback')\n  @UseGuards(AuthGuard('google'))\n  async googleAuthCallback(@Req() req) {\n    return this.authService.handleOAuthLogin(req.user);\n  }\n\n  @Post('refresh')\n  @UseGuards(JwtRefreshGuard)\n  @ApiBearerAuth()\n  @ApiOperation({ summary: 'Refresh access token using refresh token' })\n  @ApiResponse({ status: 200, type: TokensDto })\n  async refreshTokens(@GetUser() user: User): Promise<TokensDto> {\n    return this.authService.refreshTokens(user);\n  }\n\n  @Post('logout')\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @ApiOperation({ summary: 'Logout user from any authentication method' })\n  @ApiResponse({ status: 200, description: 'User logged out successfully' })\n  async logout(@GetUser() user: User) {\n    await this.authService.logout(user.id, user.provider);\n    return { message: 'Logged out successfully' };\n  }\n}\n"]}