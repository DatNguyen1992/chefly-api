{"version":3,"file":"jwt.strategy.js","sourceRoot":"","sources":["../../../src/auth/strategies/jwt.strategy.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,2CAAmE;AACnE,+CAAoD;AACpD,+CAAoD;AACpD,2CAA+C;AAC/C,+CAA+C;AAC/C,uCAAiC;AACjC,iEAAuD;AAGhD,IAAM,WAAW,GAAjB,MAAM,WAAY,SAAQ,IAAA,2BAAgB,EAAC,uBAAQ,CAAC;IACzD,YACU,aAA4B,EACJ,SAAsB;QAEtD,KAAK,CAAC;YACJ,cAAc,EAAE,yBAAU,CAAC,2BAA2B,EAAE;YACxD,gBAAgB,EAAE,KAAK;YACvB,WAAW,EAAE,aAAa,CAAC,GAAG,CAAC,wBAAwB,CAAC;SACzD,CAAC,CAAC;QAPK,kBAAa,GAAb,aAAa,CAAe;QACJ,cAAS,GAAT,SAAS,CAAa;IAOxD,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,OAAY;QACzB,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACxD,IAAI,CAAC,IAAI,EAAE,CAAC;YACV,MAAM,IAAI,8BAAqB,EAAE,CAAC;QACpC,CAAC;QACD,OAAO;YACL,GAAG,IAAI,CAAC,QAAQ,EAAE;SACnB,CAAC;IACJ,CAAC;CACF,CAAA;AArBY,kCAAW;sBAAX,WAAW;IADvB,IAAA,mBAAU,GAAE;IAIR,WAAA,IAAA,sBAAW,EAAC,kBAAI,CAAC,IAAI,CAAC,CAAA;qCADA,sBAAa;QACO,gBAAK;GAHvC,WAAW,CAqBvB","sourcesContent":["import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy, ExtractJwt } from 'passport-jwt';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { User } from '../../users/schemas/user.schema';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private configService: ConfigService,\n    @InjectModel(User.name) private userModel: Model<User>,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('jwt.accessToken.secret'),\n    });\n  }\n\n  async validate(payload: any) {\n    const user = await this.userModel.findById(payload.sub);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return {\n      ...user.toObject(),\n    };\n  }\n}\n"]}