{"version":3,"file":"history.controller.js","sourceRoot":"","sources":["../../src/history/history.controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,kEAA2D;AAC3D,2CASwB;AACxB,6CAAuE;AACvE,uDAAmD;AACnD,gFAAgE;AAChE,iEAA4D;AAC5D,+DAA0D;AAMnD,IAAM,iBAAiB,GAAvB,MAAM,iBAAiB;IAC5B,YAA6B,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAG,CAAC;IAI/D,MAAM,CACY,EAAU,EAClB,gBAAkC;QAE1C,OAAO,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE,EAAE,gBAAgB,CAAC,CAAC;IACjE,CAAC;IAID,OAAO,CAAiB,EAAU,EAAW,KAAsB;QACjE,OAAO,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IACxD,CAAC;IAID,SAAS,CAAiB,MAAc;QACtC,OAAO,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAC/C,CAAC;IAID,MAAM,CAAc,EAAU,EAAkB,MAAc;QAC5D,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;IAChD,CAAC;CACF,CAAA;AA7BY,8CAAiB;AAK5B;IAFC,IAAA,aAAI,GAAE;IACN,IAAA,sBAAY,EAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,CAAC;IAEzC,WAAA,IAAA,4BAAO,EAAC,KAAK,CAAC,CAAA;IACd,WAAA,IAAA,aAAI,GAAE,CAAA;;6CAAmB,qCAAgB;;+CAG3C;AAID;IAFC,IAAA,YAAG,GAAE;IACL,IAAA,sBAAY,EAAC,EAAE,OAAO,EAAE,kBAAkB,EAAE,CAAC;IACrC,WAAA,IAAA,4BAAO,EAAC,KAAK,CAAC,CAAA;IAAc,WAAA,IAAA,cAAK,GAAE,CAAA;;6CAAQ,mCAAe;;gDAElE;AAID;IAFC,IAAA,eAAM,EAAC,KAAK,CAAC;IACb,IAAA,sBAAY,EAAC,EAAE,OAAO,EAAE,oBAAoB,EAAE,CAAC;IACrC,WAAA,IAAA,4BAAO,EAAC,KAAK,CAAC,CAAA;;;;kDAExB;AAID;IAFC,IAAA,eAAM,EAAC,KAAK,CAAC;IACb,IAAA,sBAAY,EAAC,EAAE,OAAO,EAAE,wBAAwB,EAAE,CAAC;IAC5C,WAAA,IAAA,cAAK,EAAC,IAAI,CAAC,CAAA;IAAc,WAAA,IAAA,4BAAO,EAAC,KAAK,CAAC,CAAA;;;;+CAE9C;4BA5BU,iBAAiB;IAJ7B,IAAA,iBAAO,EAAC,SAAS,CAAC;IAClB,IAAA,uBAAa,GAAE;IACf,IAAA,kBAAS,EAAC,6BAAY,CAAC;IACvB,IAAA,mBAAU,EAAC,SAAS,CAAC;qCAEyB,gCAAc;GADhD,iBAAiB,CA6B7B","sourcesContent":["import { JwtAuthGuard } from '@auth/guards/jwt-auth.guard';\r\nimport {\r\n  Body,\r\n  Controller,\r\n  Delete,\r\n  Get,\r\n  Param,\r\n  Post,\r\n  Query,\r\n  UseGuards,\r\n} from '@nestjs/common';\r\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\r\nimport { HistoryService } from './history.service';\r\nimport { GetUser } from '@common/decorators/get-user.decorator';\r\nimport { CreateHistoryDto } from './dto/create-history.dto';\r\nimport { QueryHistoryDto } from './dto/query-history.dto';\r\n\r\n@ApiTags('history')\r\n@ApiBearerAuth()\r\n@UseGuards(JwtAuthGuard)\r\n@Controller('history')\r\nexport class HistoryController {\r\n  constructor(private readonly historyService: HistoryService) {}\r\n\r\n  @Post()\r\n  @ApiOperation({ summary: 'Create history' })\r\n  create(\r\n    @GetUser('_id') id: string,\r\n    @Body() createHistoryDto: CreateHistoryDto,\r\n  ) {\r\n    return this.historyService.createHistory(id, createHistoryDto);\r\n  }\r\n\r\n  @Get()\r\n  @ApiOperation({ summary: 'Get list history' })\r\n  getList(@GetUser('_id') id: string, @Query() query: QueryHistoryDto) {\r\n    return this.historyService.findHistoryPage(id, query);\r\n  }\r\n\r\n  @Delete('all')\r\n  @ApiOperation({ summary: 'Delete all history' })\r\n  deleteAll(@GetUser('_id') userId: string) {\r\n    return this.historyService.removeAll(userId);\r\n  }\r\n\r\n  @Delete(':id')\r\n  @ApiOperation({ summary: 'Delete current history' })\r\n  delete(@Param('id') id: string, @GetUser('_id') userId: string) {\r\n    return this.historyService.remove(id, userId);\r\n  }\r\n}\r\n"]}