{"version":3,"file":"configuration.js","sourceRoot":"","sources":["../../src/config/configuration.ts"],"names":[],"mappings":";;AAAA,kBAAe,GAAG,EAAE,CAAC,CAAC;IACpB,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,IAAI;IAC5C,KAAK,EAAE;QACL,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,WAAW;QAC3C,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE,CAAC,IAAI,IAAI;QAClD,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc;QACpC,GAAG,EACD,OAAO,CAAC,GAAG,CAAC,SAAS,KAAK,MAAM;YAC9B,CAAC,CAAC;gBACE,kBAAkB,EAChB,OAAO,CAAC,GAAG,CAAC,yBAAyB,KAAK,OAAO;aACpD;YACH,CAAC,CAAC,SAAS;QACf,oBAAoB,EAAE,CAAC;QACvB,aAAa,EAAE,CAAC,KAAa,EAAE,EAAE;YAC/B,IAAI,KAAK,GAAG,CAAC,EAAE,CAAC;gBACd,OAAO,IAAI,CAAC;YACd,CAAC;YACD,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;QACrC,CAAC;QACD,gBAAgB,EAAE,CAAC,GAAU,EAAE,EAAE;YAC/B,MAAM,WAAW,GAAG,UAAU,CAAC;YAC/B,IAAI,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC;gBACtC,OAAO,IAAI,CAAC;YACd,CAAC;YACD,OAAO,KAAK,CAAC;QACf,CAAC;KACF;IACD,GAAG,EAAE;QACH,WAAW,EAAE;YACX,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB,IAAI,oBAAoB;YAC7D,SAAS,EAAE,OAAO,CAAC,GAAG,CAAC,qBAAqB,IAAI,KAAK;SACtD;QACD,YAAY,EAAE;YACZ,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,kBAAkB,IAAI,qBAAqB;YAC/D,SAAS,EAAE,OAAO,CAAC,GAAG,CAAC,sBAAsB,IAAI,IAAI;YAErD,gBAAgB,EACd,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,EAAE,CAAC;gBACxD,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;SACnB;KACF;IACD,KAAK,EAAE;QACL,MAAM,EAAE;YACN,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,gBAAgB;YACtC,YAAY,EAAE,OAAO,CAAC,GAAG,CAAC,oBAAoB;YAC9C,WAAW,EACT,OAAO,CAAC,GAAG,CAAC,mBAAmB;gBAC/B,4CAA4C;SAC/C;KACF;IACD,QAAQ,EAAE;QACR,cAAc,EAAE,OAAO,CAAC,GAAG,CAAC,+BAA+B;KAC5D;IACD,UAAU,EAAE;QACV,qBAAqB,EAAE,OAAO,CAAC,GAAG,CAAC,qBAAqB;QACxD,kBAAkB,EAAE,OAAO,CAAC,GAAG,CAAC,kBAAkB;QAClD,qBAAqB,EAAE,OAAO,CAAC,GAAG,CAAC,qBAAqB;KACzD;CACF,CAAC,CAAC","sourcesContent":["export default () => ({\n  port: parseInt(process.env.PORT, 10) || 3000,\n  redis: {\n    host: process.env.REDIS_HOST || '127.0.0.1',\n    port: parseInt(process.env.REDIS_PORT, 10) || 6379,\n    password: process.env.REDIS_PASSWORD,\n    tls:\n      process.env.REDIS_TLS === 'true'\n        ? {\n            rejectUnauthorized:\n              process.env.REDIS_REJECT_UNAUTHORIZED !== 'false',\n          }\n        : undefined,\n    maxRetriesPerRequest: 3,\n    retryStrategy: (times: number) => {\n      if (times > 3) {\n        return null;\n      }\n      return Math.min(times * 200, 2000);\n    },\n    reconnectOnError: (err: Error) => {\n      const targetError = 'READONLY';\n      if (err.message.includes(targetError)) {\n        return true;\n      }\n      return false;\n    },\n  },\n  jwt: {\n    accessToken: {\n      secret: process.env.JWT_ACCESS_SECRET || 'your-access-secret',\n      expiresIn: process.env.JWT_ACCESS_EXPIRES_IN || '15m',\n    },\n    refreshToken: {\n      secret: process.env.JWT_REFRESH_SECRET || 'your-refresh-secret',\n      expiresIn: process.env.JWT_REFRESH_EXPIRES_IN || '7d',\n      // Convert refresh token expiration to seconds for Redis\n      expiresInSeconds:\n        parseInt(process.env.JWT_REFRESH_EXPIRES_IN_SECONDS, 10) ||\n        7 * 24 * 60 * 60,\n    },\n  },\n  oauth: {\n    google: {\n      clientID: process.env.GOOGLE_CLIENT_ID,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n      callbackURL:\n        process.env.GOOGLE_CALLBACK_URL ||\n        'http://localhost:3000/auth/google/callback',\n    },\n  },\n  firebase: {\n    serviceAccount: process.env.FIREBASE_SERVICE_ACCOUNT_BASE64,\n  },\n  cloudinary: {\n    cloudinary_cloud_name: process.env.CLOUDINARY_CLOUD_NAME,\n    cloudinary_api_key: process.env.CLOUDINARY_API_KEY,\n    cloudinary_api_secret: process.env.CLOUDINARY_API_SECRET,\n  },\n});\n"]}