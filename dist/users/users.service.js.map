{"version":3,"file":"users.service.js","sourceRoot":"","sources":["../../src/users/users.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { User } from './schemas/user.schema';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { BaseRepository } from '@shared/repositories/base.repository';\nimport { getCurrentDate } from '@common/utils/date.utils';\nimport { QueryUserDto } from './dto/query-user.dto';\nimport { DataFilter, PaginationData } from '@shared/interfaces/data.interface';\nimport { UserActive } from './enums/user-active.enum';\n@Injectable()\nexport class UsersService extends BaseRepository<User> {\n  constructor(@InjectModel(User.name) private userModel: Model<User>) {\n    super(userModel);\n  }\n\n  async findByEmail(email: string): Promise<User> {\n    const user = await this.userModel.findOne({\n      email,\n      $or: [{ deletedAt: null }, { deletedAt: { $exists: false } }],\n    });\n\n    if (!user) {\n      return null;\n    }\n    return user;\n  }\n\n  async findUserPage(query: QueryUserDto): Promise<PaginationData<User>> {\n    const dataFilter = new DataFilter<User>();\n    if (query?.limit) {\n      dataFilter.limit = query?.limit;\n    }\n    if (query?.page) {\n      dataFilter.page = query?.page;\n    }\n\n    dataFilter.condition = {\n      ...(query?.active &&\n        query?.active === UserActive.ACTIVE && { deletedAt: null }),\n      ...(query?.active &&\n        query?.active === UserActive.INACTIVE && {\n          deletedAt: { $ne: null },\n        }),\n      ...(query?.search && {\n        name: { $regex: query?.search, $options: 'i' },\n      }),\n    };\n\n    dataFilter.selectCols = ['-password'];\n    return this.findPage(dataFilter);\n  }\n\n  async create(entities: Partial<User>): Promise<User> {\n    const user = await this.userModel.create(entities);\n\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n    return user;\n  }\n\n  async update(id: string, updateUserDto: UpdateUserDto): Promise<User> {\n    const user = await this.userModel.findByIdAndUpdate(\n      id,\n      { ...updateUserDto, updatedAt: getCurrentDate() },\n      { new: true },\n    );\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n    return user;\n  }\n\n  async remove(id: string): Promise<void> {\n    const result = await this.userModel.deleteOne({ _id: id });\n    if (result.deletedCount === 0) {\n      throw new NotFoundException('User not found');\n    }\n  }\n\n  async findAll(): Promise<User[]> {\n    const users = await this.userModel.find({\n      $or: [{ deletedAt: null }, { deletedAt: { $exists: false } }],\n    });\n    if (!users) {\n      throw new NotFoundException('User not found');\n    }\n    return users;\n  }\n}\n"]}