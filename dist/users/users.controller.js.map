{"version":3,"file":"users.controller.js","sourceRoot":"","sources":["../../src/users/users.controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,2CAQwB;AACxB,6CAAuE;AACvE,kEAA6D;AAC7D,gFAAkE;AAClE,mDAA+C;AAC/C,2DAAsD;AACtD,uDAA6C;AAC7C,yDAAoD;AAM7C,IAAM,eAAe,GAArB,MAAM,eAAe;IAC1B,YAA6B,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAG,CAAC;IAI3D,UAAU,CAAY,IAAU;QAC9B,OAAO,IAAI,CAAC;IACd,CAAC;IAID,OAAO,CAAU,KAAmB;QAClC,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;IAID,MAAM,CAAiB,EAAU,EAAU,aAA4B;QACrE,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC;IACrD,CAAC;IAID,MAAM,CAAiB,EAAU;QAC/B,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACtC,CAAC;CACF,CAAA;AA1BY,0CAAe;AAK1B;IAFC,IAAA,YAAG,EAAC,SAAS,CAAC;IACd,IAAA,sBAAY,EAAC,EAAE,OAAO,EAAE,0BAA0B,EAAE,CAAC;IAC1C,WAAA,IAAA,4BAAO,GAAE,CAAA;;qCAAO,kBAAI;;iDAE/B;AAID;IAFC,IAAA,YAAG,GAAE;IACL,IAAA,sBAAY,EAAC,EAAE,OAAO,EAAE,uBAAuB,EAAE,CAAC;IAC1C,WAAA,IAAA,cAAK,GAAE,CAAA;;qCAAQ,6BAAY;;8CAEnC;AAID;IAFC,IAAA,cAAK,EAAC,SAAS,CAAC;IAChB,IAAA,sBAAY,EAAC,EAAE,OAAO,EAAE,6BAA6B,EAAE,CAAC;IACjD,WAAA,IAAA,4BAAO,EAAC,KAAK,CAAC,CAAA;IAAc,WAAA,IAAA,aAAI,GAAE,CAAA;;6CAAgB,+BAAa;;6CAEtE;AAID;IAFC,IAAA,eAAM,EAAC,SAAS,CAAC;IACjB,IAAA,sBAAY,EAAC,EAAE,OAAO,EAAE,6BAA6B,EAAE,CAAC;IACjD,WAAA,IAAA,4BAAO,EAAC,KAAK,CAAC,CAAA;;;;6CAErB;0BAzBU,eAAe;IAJ3B,IAAA,iBAAO,EAAC,OAAO,CAAC;IAChB,IAAA,uBAAa,GAAE;IACf,IAAA,kBAAS,EAAC,6BAAY,CAAC;IACvB,IAAA,mBAAU,EAAC,OAAO,CAAC;qCAEyB,4BAAY;GAD5C,eAAe,CA0B3B","sourcesContent":["import {\n  Controller,\n  Get,\n  Patch,\n  Delete,\n  UseGuards,\n  Body,\n  Query,\n} from '@nestjs/common';\nimport { ApiTags, ApiBearerAuth, ApiOperation } from '@nestjs/swagger';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { GetUser } from '../common/decorators/get-user.decorator';\nimport { UsersService } from './users.service';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './schemas/user.schema';\nimport { QueryUserDto } from './dto/query-user.dto';\n\n@ApiTags('users')\n@ApiBearerAuth()\n@UseGuards(JwtAuthGuard)\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Get('profile')\n  @ApiOperation({ summary: 'Get current user profile' })\n  getProfile(@GetUser() user: User) {\n    return user;\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Get list user profile' })\n  getPage(@Query() query: QueryUserDto) {\n    return this.usersService.findUserPage(query);\n  }\n\n  @Patch('profile')\n  @ApiOperation({ summary: 'Update current user profile' })\n  update(@GetUser('_id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(id, updateUserDto);\n  }\n\n  @Delete('profile')\n  @ApiOperation({ summary: 'Delete current user account' })\n  remove(@GetUser('_id') id: string) {\n    return this.usersService.remove(id);\n  }\n}\n"]}