{"version":3,"file":"extract-traffic-violations.service.js","sourceRoot":"","sources":["../../src/licenses/extract-traffic-violations.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, HttpException, HttpStatus, Logger } from '@nestjs/common';\r\nimport * as cheerio from 'cheerio';\r\n\r\ninterface ResolutionPlace {\r\n  name: string;\r\n  address?: string;\r\n}\r\n\r\ninterface TrafficViolation {\r\n  licensePlate?: string;\r\n  plateColor?: string;\r\n  vehicleType?: string;\r\n  violationTime?: string;\r\n  violationLocation?: string;\r\n  violationBehavior?: string;\r\n  status?: string;\r\n  detectionUnit?: string;\r\n  resolutionPlaces?: ResolutionPlace[];\r\n}\r\n\r\n@Injectable()\r\nexport class ExtractTrafficViolationsService {\r\n  private readonly logger = new Logger(ExtractTrafficViolationsService.name);\r\n\r\n  extractTrafficViolations(html: string): TrafficViolation[] {\r\n    if (!html || typeof html !== 'string') {\r\n      this.logger.error('Invalid or empty HTML provided');\r\n      throw new HttpException('Invalid HTML content', HttpStatus.BAD_REQUEST);\r\n    }\r\n\r\n    const $ = cheerio.load(html);\r\n    const violations: TrafficViolation[] = [];\r\n    let currentViolation: TrafficViolation = {};\r\n    let resolutionPlaces: ResolutionPlace[] = [];\r\n\r\n    const formGroups = $('.form-group');\r\n    if (formGroups.length === 0) {\r\n      this.logger.warn('No violation records found in HTML');\r\n      return [];\r\n    }\r\n\r\n    formGroups.each((index, element) => {\r\n      const $element = $(element);\r\n      const isRecordBoundary = $element.next().is('hr') || $element.prev().is('hr');\r\n\r\n      if (isRecordBoundary && Object.keys(currentViolation).length > 0) {\r\n        currentViolation.resolutionPlaces = resolutionPlaces;\r\n        violations.push(currentViolation);\r\n        currentViolation = {};\r\n        resolutionPlaces = [];\r\n      }\r\n\r\n      const label = $element.find('label span').text().trim();\r\n      const value = $element.find('.col-md-9').text().trim();\r\n\r\n      if (label && value) {\r\n        switch (label) {\r\n          case 'Biển kiểm soát:':\r\n            currentViolation.licensePlate = value;\r\n            break;\r\n          case 'Màu biển:':\r\n            currentViolation.plateColor = value;\r\n            break;\r\n          case 'Loại phương tiện:':\r\n            currentViolation.vehicleType = value;\r\n            break;\r\n          case 'Thời gian vi phạm:':\r\n            currentViolation.violationTime = value;\r\n            break;\r\n          case 'Địa điểm vi phạm:':\r\n            currentViolation.violationLocation = value;\r\n            break;\r\n          case 'Hành vi vi phạm:':\r\n            currentViolation.violationBehavior = value;\r\n            break;\r\n          case 'Trạng thái:':\r\n            currentViolation.status = value;\r\n            break;\r\n          case 'Đơn vị phát hiện vi phạm:':\r\n            currentViolation.detectionUnit = value;\r\n            break;\r\n          default:\r\n            this.logger.warn(`Unknown label encountered: ${label}`);\r\n            break;\r\n        }\r\n      }\r\n\r\n      const text = $element.text().trim();\r\n      if (/^[1-2]\\./.test(text)) {\r\n        resolutionPlaces.push({ name: text });\r\n      } else if (text.startsWith('Địa chỉ:')) {\r\n        if (resolutionPlaces.length > 0) {\r\n          resolutionPlaces[resolutionPlaces.length - 1].address = text\r\n            .replace('Địa chỉ:', '')\r\n            .trim();\r\n        } else {\r\n          this.logger.warn('Address found without preceding resolution place');\r\n        }\r\n      }\r\n    });\r\n\r\n    if (Object.keys(currentViolation).length > 0) {\r\n      currentViolation.resolutionPlaces = resolutionPlaces;\r\n      violations.push(currentViolation);\r\n    }\r\n\r\n    if (violations.length === 0) {\r\n      this.logger.warn('No valid violation records extracted');\r\n    } else {\r\n      this.logger.log(`Extracted ${violations.length} violation records`);\r\n    }\r\n\r\n    return violations;\r\n  }\r\n}"]}