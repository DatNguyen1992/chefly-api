{"version":3,"file":"extract-traffic-violations.service.js","sourceRoot":"","sources":["../../src/licenses/extract-traffic-violations.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, HttpException, HttpStatus, Logger } from '@nestjs/common';\nimport * as cheerio from 'cheerio';\n\ninterface ResolutionPlace {\n  name: string;\n  address?: string;\n}\n\ninterface TrafficViolation {\n  licensePlate?: string;\n  plateColor?: string;\n  vehicleType?: string;\n  violationTime?: string;\n  violationLocation?: string;\n  violationBehavior?: string;\n  status?: string;\n  detectionUnit?: string;\n  resolutionPlaces?: ResolutionPlace[];\n}\n\n@Injectable()\nexport class ExtractTrafficViolationsService {\n  private readonly logger = new Logger(ExtractTrafficViolationsService.name);\n\n  extractTrafficViolations(html: string): TrafficViolation[] {\n    if (!html || typeof html !== 'string') {\n      this.logger.error('Invalid or empty HTML provided');\n      throw new HttpException('Invalid HTML content', HttpStatus.BAD_REQUEST);\n    }\n\n    const $ = cheerio.load(html);\n    const violations: TrafficViolation[] = [];\n    let currentViolation: TrafficViolation = {};\n    let resolutionPlaces: ResolutionPlace[] = [];\n\n    const formGroups = $('.form-group');\n    if (formGroups.length === 0) {\n      this.logger.warn('No violation records found in HTML');\n      return [];\n    }\n\n    formGroups.each((index, element) => {\n      const $element = $(element);\n      const isRecordBoundary =\n        $element.next().is('hr') || $element.prev().is('hr');\n\n      if (isRecordBoundary && Object.keys(currentViolation).length > 0) {\n        currentViolation.resolutionPlaces = resolutionPlaces;\n        violations.push(currentViolation);\n        currentViolation = {};\n        resolutionPlaces = [];\n      }\n\n      const label = $element.find('label span').text().trim();\n      const value = $element.find('.col-md-9').text().trim();\n\n      if (label && value) {\n        switch (label) {\n          case 'Biển kiểm soát:':\n            currentViolation.licensePlate = value;\n            break;\n          case 'Màu biển:':\n            currentViolation.plateColor = value;\n            break;\n          case 'Loại phương tiện:':\n            currentViolation.vehicleType = value;\n            break;\n          case 'Thời gian vi phạm:':\n            currentViolation.violationTime = value;\n            break;\n          case 'Địa điểm vi phạm:':\n            currentViolation.violationLocation = value;\n            break;\n          case 'Hành vi vi phạm:':\n            currentViolation.violationBehavior = value;\n            break;\n          case 'Trạng thái:':\n            currentViolation.status = value;\n            break;\n          case 'Đơn vị phát hiện vi phạm:':\n            currentViolation.detectionUnit = value;\n            break;\n          default:\n            this.logger.warn(`Unknown label encountered: ${label}`);\n            break;\n        }\n      }\n\n      const text = $element.text().trim();\n      if (/^[1-2]\\./.test(text)) {\n        resolutionPlaces.push({ name: text });\n      } else if (text.startsWith('Địa chỉ:')) {\n        if (resolutionPlaces.length > 0) {\n          resolutionPlaces[resolutionPlaces.length - 1].address = text\n            .replace('Địa chỉ:', '')\n            .trim();\n        } else {\n          this.logger.warn('Address found without preceding resolution place');\n        }\n      }\n    });\n\n    if (Object.keys(currentViolation).length > 0) {\n      currentViolation.resolutionPlaces = resolutionPlaces;\n      violations.push(currentViolation);\n    }\n\n    if (violations.length === 0) {\n      this.logger.warn('No valid violation records extracted');\n    } else {\n      this.logger.log(`Extracted ${violations.length} violation records`);\n    }\n\n    return violations;\n  }\n}\n"]}