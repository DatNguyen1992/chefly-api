{"version":3,"file":"date.utils.js","sourceRoot":"","sources":["../../../src/common/utils/date.utils.ts"],"names":[],"mappings":"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","sourcesContent":["import dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport timezone from 'dayjs/plugin/timezone';\n\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\n// const DEFAULT_TIMEZONE = 'Asia/Ho_Chi_Minh';\nexport enum DateFormat {\n  ISO = 'YYYY-MM-DDTHH:mm:ss.SSS[Z]',\n  STANDARD = 'YYYY-MM-DD HH:mm:ss',\n}\nconst addDays = (date: Date, days: number): Date => {\n  const result = new Date(date);\n  result.setDate(result.getDate() + days);\n  return result;\n};\n\nconst addMonths = (date: Date, months: number): Date => {\n  const result = new Date(date);\n  result.setMonth(result.getMonth() + months);\n  return result;\n};\n\nconst addYears = (date: Date, year: number): Date => {\n  const result = new Date(date);\n  result.setFullYear(result.getFullYear() + year);\n  return result;\n};\n\nconst parseDate = (dateString: string): Date => {\n  const date = dayjs.utc(dateString);\n\n  if (!date.isValid()) {\n    throw new Error('Invalid date provided.');\n  }\n\n  return date.toDate();\n};\n\nconst getStartEndOfDay = (dateString: string) => {\n  const date = dayjs.utc(dateString);\n\n  if (!date.isValid()) {\n    throw new Error('Invalid date provided.');\n  }\n\n  return {\n    startDate: date.startOf('day').toISOString(),\n    endDate: date.endOf('day').toISOString(),\n  };\n};\n\nconst getStartOfDay = (dateString: string) => {\n  const date = dayjs.utc(dateString);\n\n  if (!date.isValid()) {\n    throw new Error('Invalid date provided.');\n  }\n\n  return {\n    startDate: date.startOf('day').toISOString(),\n  };\n};\n\nconst getEndOfDay = (dateString: string) => {\n  const date = dayjs.utc(dateString);\n\n  if (!date.isValid()) {\n    throw new Error('Invalid date provided.');\n  }\n\n  return {\n    endDate: date.endOf('day').toISOString(),\n  };\n};\n\nconst getCurrentDate = (): Date => {\n  return dayjs.utc().toDate();\n};\n\nconst getCurrentDateString = (format = DateFormat.STANDARD): string => {\n  return dayjs.utc().format(format);\n};\nexport function isSameDay(date1: Date, date2: Date) {\n  return dayjs(date1).isSame(dayjs(date2), 'day');\n}\n\nexport function getTimeString(date: Date) {\n  return dayjs(date).format('HH:mm');\n}\n\nconst getDateBeforeDays = (days: number): Date => {\n  const now = getCurrentDate();\n  return dayjs(now).subtract(days, 'day').toDate();\n};\n\nexport {\n  addDays,\n  addMonths,\n  addYears,\n  parseDate,\n  getStartEndOfDay,\n  getStartOfDay,\n  getEndOfDay,\n  getCurrentDate,\n  getCurrentDateString,\n  getDateBeforeDays,\n};\n"]}