{"version":3,"file":"is-pin-code-format.decorator.js","sourceRoot":"","sources":["../../../src/common/decorators/is-pin-code-format.decorator.ts"],"names":[],"mappings":";;;;;;;;;AAwBA,0CAUC;AAlCD,4CAAqD;AACrD,qDAKyB;AAGlB,IAAM,yBAAyB,GAA/B,MAAM,yBAAyB;IACpC,QAAQ,CAAC,KAAU;QACjB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;YACzB,OAAO,KAAK,CAAC,KAAK,CAChB,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,QAAQ,IAAI,4BAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,CACzD,CAAC;QACJ,CAAC;QACD,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,4BAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnE,CAAC;IAED,cAAc;QACZ,OAAO,0CAA0C,CAAC;IACpD,CAAC;CACF,CAAA;AAbY,8DAAyB;oCAAzB,yBAAyB;IADrC,IAAA,qCAAmB,EAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;GACzB,yBAAyB,CAarC;AAED,SAAgB,eAAe,CAAC,iBAAqC;IACnE,OAAO,UAAU,MAAc,EAAE,YAAoB;QACnD,IAAA,mCAAiB,EAAC;YAChB,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,YAAY,EAAE,YAAY;YAC1B,OAAO,EAAE,iBAAiB;YAC1B,WAAW,EAAE,EAAE;YACf,SAAS,EAAE,yBAAyB;SACrC,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { PIN_CODE_PATTERN } from '@common/constants';\nimport {\n  registerDecorator,\n  ValidationOptions,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\n\n@ValidatorConstraint({ async: false })\nexport class IsFormatPinCodeConstraint implements ValidatorConstraintInterface {\n  validate(value: any) {\n    if (Array.isArray(value)) {\n      return value.every(\n        (v) => typeof v === 'string' && PIN_CODE_PATTERN.test(v),\n      );\n    }\n    return typeof value === 'string' && PIN_CODE_PATTERN.test(value);\n  }\n\n  defaultMessage() {\n    return 'Value must be a 4-digit numeric PIN code';\n  }\n}\n\nexport function IsFormatPinCode(validationOptions?: ValidationOptions) {\n  return function (object: object, propertyName: string) {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: IsFormatPinCodeConstraint,\n    });\n  };\n}\n"]}