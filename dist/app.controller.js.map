{"version":3,"file":"app.controller.js","sourceRoot":"","sources":["../src/app.controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,2CAAiD;AACjD,2CAA+C;AAC/C,+CAAoD;AACpD,uCAAsC;AAG/B,IAAM,aAAa,GAAnB,MAAM,aAAa;IACxB,YACuC,UAAsB,EAC1C,aAA4B;QADR,eAAU,GAAV,UAAU,CAAY;QAC1C,kBAAa,GAAb,aAAa,CAAe;IAC5C,CAAC;IAGJ,cAAc;QACZ,IAAI,CAAC;YACH,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,KAAK,CAAC,CAAC;YACrD,IAAI,WAAW,EAAE,CAAC;gBAChB,OAAO;oBACL,MAAM,EAAE,SAAS;oBACjB,OAAO,EAAE,yCAAyC;oBAClD,eAAe,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU;iBAC5C,CAAC;YACJ,CAAC;iBAAM,CAAC;gBACN,OAAO;oBACL,MAAM,EAAE,OAAO;oBACf,OAAO,EAAE,oCAAoC;oBAC7C,eAAe,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU;iBAC5C,CAAC;YACJ,CAAC;QACH,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO;gBACL,MAAM,EAAE,OAAO;gBACf,OAAO,EAAE,mCAAmC;gBAC5C,KAAK,EAAE,KAAK,CAAC,OAAO;aACrB,CAAC;QACJ,CAAC;IACH,CAAC;IAGD,OAAO;QACL,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,CAAC;IACxC,CAAC;IAGD,WAAW;QACT,OAAO;YACL,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,aAAa,CAAC;SACzD,CAAC;IACJ,CAAC;CACF,CAAA;AA3CY,sCAAa;AAOxB;IADC,IAAA,YAAG,GAAE;;;;mDAwBL;AAGD;IADC,IAAA,YAAG,EAAC,OAAO,CAAC;;;;4CAGZ;AAGD;IADC,IAAA,YAAG,EAAC,YAAY,CAAC;;;;gDAKjB;wBA1CU,aAAa;IADzB,IAAA,mBAAU,GAAE;IAGR,WAAA,IAAA,2BAAgB,GAAE,CAAA;qCAA8B,qBAAU;QAC3B,sBAAa;GAHpC,aAAa,CA2CzB","sourcesContent":["import { Controller, Get } from '@nestjs/common';\r\nimport { ConfigService } from '@nestjs/config';\r\nimport { InjectConnection } from '@nestjs/mongoose';\r\nimport { Connection } from 'mongoose';\r\n\r\n@Controller()\r\nexport class AppController {\r\n  constructor(\r\n    @InjectConnection() private readonly connection: Connection,\r\n    private readonly configService: ConfigService,\r\n  ) {}\r\n\r\n  @Get()\r\n  testConnection() {\r\n    try {\r\n      const isConnected = this.connection.readyState === 1;\r\n      if (isConnected) {\r\n        return {\r\n          status: 'success',\r\n          message: 'Successfully connected to MongoDB Atlas',\r\n          connectionState: this.connection.readyState,\r\n        };\r\n      } else {\r\n        return {\r\n          status: 'error',\r\n          message: 'Failed to connect to MongoDB Atlas',\r\n          connectionState: this.connection.readyState,\r\n        };\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        status: 'error',\r\n        message: 'Error connecting to MongoDB Atlas',\r\n        error: error.message,\r\n      };\r\n    }\r\n  }\r\n\r\n  @Get('/test')\r\n  getHome() {\r\n    return { message: 'API is running!' };\r\n  }\r\n\r\n  @Get('/env-check')\r\n  getEnvCheck() {\r\n    return {\r\n      database_username: this.configService.get('DB_USERNAME'), // Example env variable\r\n    };\r\n  }\r\n}\r\n"]}