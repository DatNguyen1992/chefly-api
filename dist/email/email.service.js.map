{"version":3,"file":"email.service.js","sourceRoot":"","sources":["../../src/email/email.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,2CAA4C;AAC5C,+CAA+C;AAC/C,uCAAiC;AACjC,4DAAiC;AACjC,yDAA+C;AAGxC,IAAM,YAAY,GAAlB,MAAM,YAAY;IAGvB,YAA6C,cAA4B;QAA5B,mBAAc,GAAd,cAAc,CAAc;QACvE,IAAI,CAAC,EAAE,GAAG,IAAA,oBAAO,EAAC;YAChB,MAAM,EAAE,oDAAoD;YAC5D,MAAM,EAAE,qDAAqD;SAC9D,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,aAAa;QACjB,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAC7D,MAAM,KAAK,GAAG,GAAG,QAAQ,sDAAsD,CAAC;QAChF,MAAM,QAAQ,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC;QAClE,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QACtB,OAAO,KAAK,CAAC;IACf,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,KAAa;QAC7B,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QAC/D,OAAO,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;IAC7C,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,KAAa,EAAE,SAAiB;QAC/C,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QAC/D,OAAO,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACpE,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,KAAa;QAC7B,MAAM,IAAI,CAAC,cAAc,CAAC,SAAS,CACjC,EAAE,KAAK,EAAE,EACT,EAAE,IAAI,EAAE,EAAE,SAAS,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,CACpC,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,KAAa;QAC7B,MAAM,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IACjD,CAAC;IAED,KAAK,CAAC,YAAY,CAChB,KAAa,EACb,OAKC;QAED,MAAM,IAAI,CAAC,cAAc,CAAC,SAAS,CACjC,EAAE,KAAK,EAAE,EACT,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,EAAE,GAAG,OAAO,EAAE,UAAU,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAC/D,EAAE,MAAM,EAAE,IAAI,EAAE,CACjB,CAAC;IACJ,CAAC;CACF,CAAA;AAtDY,oCAAY;uBAAZ,YAAY;IADxB,IAAA,mBAAU,GAAE;IAIE,WAAA,IAAA,sBAAW,EAAC,oBAAK,CAAC,IAAI,CAAC,CAAA;qCAAyB,gBAAK;GAHvD,YAAY,CAsDxB","sourcesContent":["import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport Mailgun from 'mailgun-js';\nimport { Email } from './schemas/email.schema';\n\n@Injectable()\nexport class EmailService {\n  //   private mg = mailgun({ apiKey: '943400ecf659fd87022197efa4bd1a24-17c877d7-a972715e', domain: 'diaty.com' });\n  private mg: Mailgun.Mailgun;\n  constructor(@InjectModel(Email.name) private tempEmailModel: Model<Email>) {\n    this.mg = Mailgun({\n      apiKey: '943400ecf659fd87022197efa4bd1a24-17c877d7-a972715e',\n      domain: 'sandbox1640064e04114303ac6dbb770cb34e1a.mailgun.org',\n    });\n  }\n\n  async generateEmail(): Promise<string> {\n    const randomId = Math.random().toString(36).substring(2, 10);\n    const email = `${randomId}@sandbox1640064e04114303ac6dbb770cb34e1a.mailgun.org`;\n    const newEmail = new this.tempEmailModel({ email, messages: [] });\n    await newEmail.save();\n    return email;\n  }\n\n  async getMessages(email: string): Promise<any[]> {\n    const tempEmail = await this.tempEmailModel.findOne({ email });\n    return tempEmail ? tempEmail.messages : [];\n  }\n\n  async getMessage(email: string, messageId: string): Promise<any> {\n    const tempEmail = await this.tempEmailModel.findOne({ email });\n    return tempEmail ? tempEmail.messages[parseInt(messageId)] : null;\n  }\n\n  async extendEmail(email: string): Promise<void> {\n    await this.tempEmailModel.updateOne(\n      { email },\n      { $set: { createdAt: new Date() } }, // Reset thời gian để gia hạn\n    );\n  }\n\n  async deleteEmail(email: string): Promise<void> {\n    await this.tempEmailModel.deleteOne({ email });\n  }\n\n  async receiveEmail(\n    email: string,\n    message: {\n      from: string;\n      subject: string;\n      content: string;\n      isHtml?: boolean;\n    },\n  ) {\n    await this.tempEmailModel.updateOne(\n      { email },\n      { $push: { messages: { ...message, receivedAt: new Date() } } },\n      { upsert: true }, // Tùy chọn: Tạo mới nếu email không tồn tại\n    );\n  }\n}\n"]}