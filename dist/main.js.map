{"version":3,"file":"main.js","sourceRoot":"","sources":["../src/main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uCAA2C;AAC3C,6CAAyC;AACzC,+CAAiC;AACjC,6CAAiE;AA4CjE,MAAM,YAAY,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;AACrC,IAAI,YAAY,CAAC,KAAK,EAAE,CAAC;IACvB,OAAO,CAAC,KAAK,CAAC,0BAA0B,EAAE,YAAY,CAAC,KAAK,CAAC,CAAC;AAChE,CAAC;KAAM,CAAC;IACN,OAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;AAC3D,CAAC;AAED,KAAK,UAAU,SAAS;IACtB,MAAM,GAAG,GAAG,MAAM,kBAAW,CAAC,MAAM,CAAC,sBAAS,CAAC,CAAC;IAEhD,GAAG,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAC3B,GAAG,CAAC,UAAU,CAAC;QACb,MAAM,EAAE,GAAG;QACX,OAAO,EAAE,wCAAwC;QACjD,cAAc,EAAE,qCAAqC;KACtD,CAAC,CAAC;IAEH,MAAM,MAAM,GAAG,IAAI,yBAAe,EAAE;SACjC,QAAQ,CAAC,YAAY,CAAC;SACtB,cAAc,CAAC,wCAAwC,CAAC;SACxD,UAAU,CAAC,KAAK,CAAC;SACjB,aAAa,EAAE;SACf,KAAK,EAAE,CAAC;IACX,MAAM,QAAQ,GAAG,uBAAa,CAAC,cAAc,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IAC3D,uBAAa,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;IAC1C,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACzB,CAAC;AACD,SAAS,EAAE,CAAC","sourcesContent":["import { NestFactory } from '@nestjs/core';\r\nimport { AppModule } from './app.module';\r\nimport * as dotenv from 'dotenv';\r\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';\r\n\r\n// const dotenvResult = dotenv.config();\r\n// if (dotenvResult.error) {\r\n//   console.error('Error loading .env file:', dotenvResult.error);\r\n// } else {\r\n//   console.log('Environment variables loaded successfully');\r\n// }\r\n\r\n// let cachedApp = null;\r\n\r\n// async function bootstrap() {\r\n//   console.log('test3');\r\n//   if (!cachedApp) {\r\n//     if (!process.env.DB_USERNAME || !process.env.DB_PASSWORD) {\r\n//       throw new Error(\r\n//         'Missing DB_USERNAME or DB_PASSWORD environment variables',\r\n//       );\r\n//     }\r\n\r\n//     const app = await NestFactory.create(AppModule);\r\n//     app.enableCors({\r\n//       origin: '*',\r\n//       methods: 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS',\r\n//       allowedHeaders: 'Content-Type, Accept, Authorization',\r\n//     });\r\n//     app.setGlobalPrefix('api');\r\n//     await app.init();\r\n//     cachedApp = app.getHttpAdapter().getInstance();\r\n//   }\r\n//   return cachedApp;\r\n// }\r\n\r\n// export default async (req: any, res: any) => {\r\n//   console.log('test4');\r\n//   const app = await bootstrap();\r\n//   return app(req, res);\r\n// };\r\n\r\n// (async () => {\r\n//   console.log('Forcing execution...');\r\n//   await (await import('./main')).default({}, {});\r\n// })();\r\n\r\nconst dotenvResult = dotenv.config();\r\nif (dotenvResult.error) {\r\n  console.error('Error loading .env file:', dotenvResult.error);\r\n} else {\r\n  console.log('Environment variables loaded successfully');\r\n}\r\n\r\nasync function bootstrap() {\r\n  const app = await NestFactory.create(AppModule);\r\n  // Global prefix\r\n  app.setGlobalPrefix('api');\r\n  app.enableCors({\r\n    origin: '*',\r\n    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS',\r\n    allowedHeaders: 'Content-Type, Accept, Authorization',\r\n  });\r\n  // Swagger setup\r\n  const config = new DocumentBuilder()\r\n    .setTitle('CHEFLY API')\r\n    .setDescription('Authentication and User Management API')\r\n    .setVersion('1.0')\r\n    .addBearerAuth()\r\n    .build();\r\n  const document = SwaggerModule.createDocument(app, config);\r\n  SwaggerModule.setup('api', app, document);\r\n  await app.listen(3000);\r\n}\r\nbootstrap();\r\n"]}