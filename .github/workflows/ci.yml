name: CI for Chefly API

on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    branches:
      - main
      - develop

env:
  NODE_VERSION: '18.x'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm' # Cache dependencies for faster builds

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: npm ci # Use npm ci for CI environments (faster, deterministic)

      # Step 4: Lint the code
      - name: Lint Code
        run: npm run lint

      # Step 5: Build the project
      - name: Build Project
        run: npm run build

  check-render-deploy:
    needs: build-and-test # Run after build-and-test job
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Install curl and jq
      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install -y curl jq

      # Step 3: Trigger Render deploy
      - name: Trigger Render Deploy
        id: trigger_deploy
        run: |
          RESPONSE=$(curl -s -w "%{http_code}" \
            -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys)
          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          BODY=$(echo "$RESPONSE" | sed '$d')
          
          echo "HTTP Status: $HTTP_CODE"
          echo "Response Body: $BODY"
          
          if [ "$HTTP_CODE" -ne 201 ]; then
            echo "Failed to trigger deploy. HTTP Status: $HTTP_CODE"
            exit 1
          fi
          echo "Deploy triggered successfully"

      # Step 4: Check Render deploy status
      - name: Check Render Deploy Status
        run: |
          echo "Checking deploy status for service ${{ secrets.RENDER_SERVICE_ID }}"
          
          # Wait for deployment to start
          sleep 10
          
          # Poll Render API for deploy status
          for i in {1..30}; do
            RESPONSE=$(curl -s -w "\n%{http_code}" \
              -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
              https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys?limit=1)
            HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
            BODY=$(echo "$RESPONSE" | sed '$d')
            
            echo "HTTP Status: $HTTP_CODE"
            if [ "$HTTP_CODE" -ne 200 ]; then
              echo "Failed to fetch deploy status. HTTP Status: $HTTP_CODE"
              echo "Response Body: $BODY"
              exit 1
            fi
            
            DEPLOY_STATUS=$(echo "$BODY" | jq -r '.[0].status // "unknown"')
            echo "Deploy status: $DEPLOY_STATUS"
            
            if [ "$DEPLOY_STATUS" = "live" ]; then
              echo "Deployment successful!"
              exit 0
            elif [ "$DEPLOY_STATUS" = "failed" ] || [ "$DEPLOY_STATUS" = "canceled" ]; then
              echo "Deployment failed or was canceled!"
              exit 1
            elif [ "$DEPLOY_STATUS" = "unknown" ]; then
              echo "Unknown deploy status. Response: $BODY"
              exit 1
            fi
            
            echo "Deployment still in progress, waiting..."
            sleep 10
          done
          
          echo "Timeout waiting for deployment to complete"
          exit 1